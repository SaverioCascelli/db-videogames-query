SELECT

1- Selezionare tutte le software house americane (3)
select * from software_houses where country = 'United States' ;

2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)
select * from players where city = "Rogahnland";

3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)
select * from players where name like "%a";

4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)
select * from reviews where player_id = 880;

5- Contare quanti tornei ci sono stati nell'anno 2015 (9)
select count(id) as tournament_2015  from tournaments where year = 2015;

6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)
select * from awards where description like '%facere%';

7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)
select distinct videogame_id  from category_videogame where category_id = 2 or category_id = 6 ;

8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)
select * from reviews where rating >= 2 and rating <=4;

9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)
select * from videogames where year(release_date) = 2020 ; 

10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)
select distinct videogame_id  from reviews r where rating = 5;

*********** BONUS ***********

11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)
select count(id)  from reviews v where videogame_id  = 412;
select avg(rating)  from reviews v where videogame_id  = 412;

12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)
select count(id) from videogames v where year(release_date) = 2018 and software_house_id = 1
------------------------------------------------------------------------------------------------------------------------------------------------------------

GROUP BY

1- Contare quante software house ci sono per ogni paese (3)
select country,count(country)  from software_houses sh group by country   ;

2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)
select videogame_id, count(videogame_id) from reviews r group by videogame_id; 

3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)
select pegi_label_id ,count(videogame_id) from pegi_label_videogame plv  group by pegi_label_id  ;

4- Mostrare il numero di videogiochi rilasciati ogni anno (11)
SELECT YEAR(release_date) AS year, COUNT(*) AS count
FROM videogames v 
GROUP BY YEAR(release_date);

5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)
select device_id , count(videogame_id) as videogame_per_device  from device_videogame dv group by device_id  ;

6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)
select videogame_id as videogame , avg(rating)  as rating from reviews r group by videogame order by rating asc ;

------------------------------------------------------------------------------------------------------------------------------------------------------------

JOIN

1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)
select distinct p.* from players p join reviews r on r.player_id = p.id ;

2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226).
select distinct v.* from tournaments t 
join tournament_videogame tv on t.id = tv.tournament_id 
join videogames v on tv.videogame_id = v.id
where t.`year` = '2016';

3- Mostrare le categorie di ogni videogioco (1718)
select v.name, c.* from videogames v 
join category_videogame cv on cv.videogame_id = v.id 
join categories c on c.id = cv.category_id 
order by v.name 

4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)
select distinct  sh.* from software_houses sh
join videogames v ON v.software_house_id = sh.id
where year(v.release_date) >= 2020

5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)
select sh.name , a.* from software_houses sh 
join videogames v on sh.id = v.software_house_id 
join award_videogame av on av.videogame_id = v.id 
join awards a on a.id = av.award_id 
order by sh.name 

6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)
select distinct  v.id,c.id as category, pl.id as pegi  from reviews r 
join videogames v on v.id = r.videogame_id 
join pegi_label_videogame plv on plv.videogame_id = v.id
join pegi_labels pl on plv.pegi_label_id = pl.id 
join category_videogame cv on cv.videogame_id = v.id 
join categories c on c.id = cv.category_id 
where r.rating >= 4


7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)
select distinct  v.* from tournaments t
join tournament_videogame tv ON tv.tournament_id = t.id 
join videogames v on v.id = tv.videogame_id 
join player_tournament pt on pt.tournament_id = t.id 
join players p on p.id = pt.player_id 
where p.name like "s%"

8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)
select t.city from awards a 
join award_videogame av on av.award_id = a.id 
join videogames v on v.id = av.videogame_id 
join tournament_videogame tv on tv.videogame_id = v.id 
join tournaments t on t.id = tv.videogame_id 
where av.`year` = 2018 and a.name  = "Gioco dell'anno"


9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)
select p.* from awards a 
join award_videogame av on av.award_id = a.id 
join videogames v on v.id = av.videogame_id 
join tournament_videogame tv on tv.videogame_id = v.id 
join tournaments t on t.id = tv.tournament_id 
join player_tournament pt on pt.tournament_id = t.id 
join players p on p.id = pt.player_id 
where t.`year` = '2019' and a.name = 'gioco più atteso' and av.`year` ='2018'



*********** BONUS ***********

10- Selezionare i dati della prima software house che ha rilasciato un gioco, assieme ai dati del gioco stesso (software house id : 5)
select  sh.*,v.release_date  from software_houses sh 
join videogames v on v.software_house_id = sh.id 
order by v.release_date asc 
limit 1

11- Selezionare i dati del videogame (id, name, release_date, totale recensioni) con più recensioni (videogame id : potrebbe uscire 449 o 398, sono entrambi a 20)
select videogame_id,count(videogame_id) as count  from reviews r 
group by videogame_id 
order by count desc
limit 1


12- Selezionare la software house che ha vinto più premi tra il 2015 e il 2016 (software house id : potrebbe uscire 3 o 1, sono entrambi a 3)
select sh.*, count(sh.id) as count  from software_houses sh 
join videogames v on v.software_house_id = sh.id 
join award_videogame av on av.videogame_id = v.id 
join awards a on a.id = av.award_id 
where av.`year` >= '2015' and av.`year` <= '2016'
group by sh.id
order by count desc
limit 1

13- Selezionare le categorie dei videogame i quali hanno una media recensioni inferiore a 1.5 (10)
select distinct c.name from videogames v 
join category_videogame cv on v.id = cv.videogame_id 
join categories c on c.id = cv.category_id 
join reviews r on r.videogame_id = v.id 
group by v.id,c.name
having avg(r.rating) < 2

